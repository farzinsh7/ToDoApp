services:
  db:
    container_name: db-todo
    image: postgres:15-alpine
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432
    restart: always

  redis:
    container_name: redis-todo
    image: redis:7-alpine
    ports:
      - "5379:6379"
    command: redis-server --save 60 1 --loglevel warning
    restart: always

  backend:
    container_name: backend-todo
    build:
      context: .
      dockerfile: ./dockerfiles/dev/django/Dockerfile
    volumes:
      - ./core:/usr/src/app
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    working_dir: /usr/src/app
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - 8000:8000
    environment:
      - DEBUG=False
    restart: always
    depends_on:
      - db
      - redis

  worker:
    build:
      context: .
      dockerfile: ./dockerfiles/dev/django/Dockerfile
    volumes:
      - ./core:/usr/src/app
    command: celery -A core worker -l info
    depends_on:
      - db
      - redis
      - backend
    restart: always

  nginx:
    container_name: nginx-todo
    image: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/usr/src/app/static
      - media_volume:/home/usr/src/app/media
    ports:
      - 80:80
    depends_on:
      - redis
      - backend
    restart: always

volumes:
  static_volume:
  media_volume:
